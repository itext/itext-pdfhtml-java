<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.itextpdf</groupId>
    <artifactId>root</artifactId>
    <version>9.2.0-SNAPSHOT</version>
    <relativePath />
  </parent>

  <artifactId>html2pdf</artifactId>
  <version>6.2.0-SNAPSHOT</version>

  <name>pdfHTML</name>
  <description>pdfHTML is an iText add-on that lets you to parse (X)HTML snippets and the associated CSS and converts
    them to PDF.</description>

  <scm>
    <connection>git@github.com:itext/i7j-pdfhtml.git</connection>
    <url>https://github.com/itext/i7j-pdfhtml</url>
  </scm>

  <properties>
    <itext.version>${project.parent.version}</itext.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>forms</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>layout</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>svg</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>hyph</artifactId>
      <version>${itext.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>pdfa</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>pdftest</artifactId>
      <version>${itext.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>pdfua</artifactId>
      <version>${itext.version}</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>itext-snapshot</id>
      <name>iText Repository - snapshots</name>
      <url>https://repo.itextsupport.com/snapshot</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>itext-releases</id>
      <name>iText Repository - releases</name>
      <url>https://repo.itextsupport.com/releases</url>
    </repository>
  </repositories>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.css</include>
          <include>**/*.ttf</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.json</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources/com/itextpdf/html2pdf</directory>
        <includes>
          <include>NOTICE.txt</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <sourceFileExcludes>
            <sourceFileExclude>com/itextpdf/html2pdf/attach/impl/layout/BodyHtmlStylesContainer.java</sourceFileExclude>
          </sourceFileExcludes>
          <groups>
            <group>
              <title>pdfHTML</title>
              <packages>com.itextpdf.html2pdf*</packages>
            </group>
          </groups>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>with-sharpen</id>
      <build>
        <plugins>
          <plugin>
            <groupId>sharpen</groupId>
            <artifactId>sharpen-maven-plugin</artifactId>
            <version>1.0-SNAPSHOT</version>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>sharpen</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>sharpen</groupId>
                <artifactId>standard-framework-mapping</artifactId>
                <version>1.0-SNAPSHOT</version>
              </dependency>
            </dependencies>
            <configuration>
              <projectName>html2pdf</projectName>
              <cSharpTargetFolder>./../../sharp/html2pdf</cSharpTargetFolder>
              <cSharpSourceCodeDestination>itext/itext.html2pdf</cSharpSourceCodeDestination>
              <cSharpTestCodeDestination>itext.tests/itext.html2pdf.tests</cSharpTestCodeDestination>
              <buildDotnet>${sharpen.builddotnet}</buildDotnet>
              <showDiff>${sharpen.showdiff}</showDiff>
              <sourceCodeFiles>
                <file>**/src/main/java/**/*.java</file>
              </sourceCodeFiles>
              <testCodeFiles>
                <file>**/src/test/java/**/*.java</file>
              </testCodeFiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>native</id>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.nativeimage</groupId>
          <artifactId>svm</artifactId>
          <version>22.3.5</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk18on</artifactId>
          <version>${bouncycastle.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.6.0</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${basedir}/../resources/graalvm</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <buildArgs>
                <arg>
                  --initialize-at-build-time=org.junit.validator.PublicClassValidator
                  --initialize-at-build-time=org.junit.platform.engine.TestTag

                  --enable-url-protocols=http,https,ftp

                  -H:+AddAllCharsets
                  <!-- Graalvm requires VisualStudio 2022 on Windows but it also works with earlier versions.
                       So this is a workaround to run tests on TC agents having earlier VS versions installed. -->
                  -H:-CheckToolchain
                </arg>
              </buildArgs>
              <skipTests>false</skipTests>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>